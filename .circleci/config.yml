version: 2.1
jobs:
  # Build the site to store artifacts
  demo_html:
    docker:
      - image: circleci/ruby:2.6
    steps:
      # Attach the built markdown files
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Copy over the built markdown files
      - copy_built_files

      # Build the site's HTML w/ the base_url for CircleCI artifacts
      - run: gem install bundler
      - run: bundle install
      - run: bundle exec jekyll build --baseurl /0/html/

      # Tell Circle to store the documentation output in a folder we can access later
      - store_artifacts:
          path: _site/
          destination: html

      - store_artifacts:
          path: _build/
          destination: _build

  # Push the HTML to the gh-pages branch
  push_html:
    docker:
      - image: circleci/ruby:2.6
    steps:
      # Attach the built markdown files
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Install the ghp-import tool
      - run:
          name: "Install ghp-import"
          command: |      
            export PATH=$PATH:/home/circleci/.local/bin
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python get-pip.py --user
            pip install -U ghp-import --user

      - add_ssh_keys:
          fingerprints:
            # The SSH key fingerprint
            - "4e:f9:a5:62:b0:62:f5:d4:7d:f2:52:0a:53:c9:d6:39"

      # Copy over the built markdown files
      - copy_built_files

      # Build the site's HTML w/ the base_url for CircleCI artifacts
      - run: gem install bundler
      - run: bundle install
      - run: bundle exec jekyll build

      # Push the `_site` folder to our gh-pages branch
      - run:
          name: Push site to gh-pages
          command: |
            export PATH=$PATH:/home/circleci/.local/bin
            ghp-import -p -n -f _site

  build_markdown:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      # Get our data and merge with upstream
      - run: sudo apt-get update
      - checkout
      # Update our path
      - run: echo "export PATH=~/.local/bin:$PATH" >> $BASH_ENV
      # Restore cached files to speed things up
      - restore_cache:
          keys:
            - cache-pip
      - run: pip install --user flake8 pytest-cov
      # Install the packages needed to build our documentation
      # This will depend on your particular package!
      - run: pip install --user -r requirements.txt

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: cache-pip
          paths:
            - ~/.cache/pip

      # build the site
      - run:
          name: Build site markdown
          command: jupyter-book build .

      # Persist the specified paths (see https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs)
      - persist_to_workspace:
          root: .
          paths:
            - ./_build/


# Tell CircleCI to use this workflow when it builds the site
workflows:
  version: 2
  default:
    jobs:
      - build_markdown
      - demo_html:
          requires:
            - build_markdown

      - push_html:
          requires:
            - build_markdown
          filters:
            branches:
              only:
                - master


commands:
  copy_built_files:
    description: "Copy the build site files so we can build the HTML"
    steps:
      # Grab the the built markdown from the last step
      - run:
          name: Copy over built site files
          command: |
            rm -rf _build
            cp -r /tmp/workspace/_build .
